<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxgcore="http://schemas.devexpress.com/winfx/2008/xaml/grid" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars" xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid" xmlns:dxgt="http://schemas.devexpress.com/winfx/2008/xaml/grid/themekeys" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">
    <ControlTemplate x:Key="{dxgt:TableViewThemeKey ResourceKey=FixedNoneHeadersPanelTemplate}">
        <dx:StackVisibleIndexPanel dxg:GridColumn.HeaderPresenterType="Headers" ArrangeAccordingToVisibleIndex="True" Name="headersPanel" Orientation="Horizontal">
            <dx:DragManager.DropTargetFactory>
                <dxgcore:FixedNoneColumnHeaderDropTargetFactoryExtension />
            </dx:DragManager.DropTargetFactory>
        </dx:StackVisibleIndexPanel>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxgt:TableViewThemeKey ResourceKey=FixedNoneDropPanelTemplate}">
        <dx:StackVisibleIndexPanel ArrangeAccordingToVisibleIndex="True" Orientation="Horizontal" />
    </ControlTemplate>
    <ControlTemplate x:Key="{dxgt:TableViewThemeKey ResourceKey=FixedLeftHeadersPanelTemplate}">
        <dx:StackVisibleIndexPanel dxg:GridColumn.HeaderPresenterType="Headers" ArrangeAccordingToVisibleIndex="True" Name="fixedLeftHeadersPanel" Orientation="Horizontal">
            <dx:DragManager.DropTargetFactory>
                <dxgcore:FixedLeftColumnHeaderDropTargetFactoryExtension />
            </dx:DragManager.DropTargetFactory>
        </dx:StackVisibleIndexPanel>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxgt:TableViewThemeKey ResourceKey=FixedLeftNoneDropPanelTemplate}">
        <dx:StackVisibleIndexPanel ArrangeAccordingToVisibleIndex="True" Orientation="Horizontal" />
    </ControlTemplate>
    <ControlTemplate x:Key="{dxgt:TableViewThemeKey ResourceKey=FixedRightHeadersPanelTemplate}">
        <dx:StackVisibleIndexPanel dxg:GridColumn.HeaderPresenterType="Headers" ArrangeAccordingToVisibleIndex="True" Name="fixedRightHeadersPanel" Orientation="Horizontal">
            <dx:DragManager.DropTargetFactory>
                <dxgcore:FixedRightColumnHeaderDropTargetFactoryExtension />
            </dx:DragManager.DropTargetFactory>
        </dx:StackVisibleIndexPanel>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxgt:TableViewThemeKey ResourceKey=FixedRightNoneDropPanelTemplate}">
        <dx:StackVisibleIndexPanel ArrangeAccordingToVisibleIndex="True" Orientation="Horizontal" />
    </ControlTemplate>
    <ControlTemplate x:Key="{dxgt:GridRowThemeKey ResourceKey=RowDecorationTemplate}" TargetType="{x:Type ContentControl}">
        <ContentPresenter />
    </ControlTemplate>
    <ControlTemplate x:Key="{dxgt:GridRowThemeKey ResourceKey=RowControlTemplate}">
        <ContentControl Template="{Binding Path=(dxgcore:RowData.CurrentRowData).View.RowDecorationTemplate, RelativeSource={RelativeSource TemplatedParent}}">
            <dxg:GridRowContent x:Name="content" Style="{Binding Path=(dxgcore:RowData.CurrentRowData).View.RowStyle, RelativeSource={RelativeSource TemplatedParent}}" MinHeight="{Binding Path=(dxgcore:RowData.CurrentRowData).View.RowMinHeight, RelativeSource={RelativeSource TemplatedParent}}" dxg:RowIndicatorViewInfo.ActualRowIndicatorHeight="{Binding CurrentHeight, RelativeSource={RelativeSource Self}, Mode=OneWay}">
                <ToolTipService.ToolTip>
                    <Binding Path="(dxgcore:RowData.CurrentRowData).(dxe:BaseEdit.HasValidationError)" RelativeSource="{RelativeSource TemplatedParent}">
                        <Binding.Converter>
                            <dx:BoolToObjectConverter FalseValue="{x:Null}">
                                <dx:BoolToObjectConverter.TrueValue>
                                    <ToolTip Name="toolTip" Content="{Binding Path=(dxgcore:RowData.CurrentRowData).(dxe:BaseEdit.ValidationError), RelativeSource={RelativeSource TemplatedParent}}">
                                        <ToolTip.ContentTemplate>
                                            <DataTemplate>
                                                <dx:DXDockPanel LastChildFill="True">
                                                    <dxe:ErrorControl Content="{Binding}" />
                                                    <ContentPresenter VerticalAlignment="Center" Content="{Binding Path=ErrorContent}" />
                                                </dx:DXDockPanel>
                                            </DataTemplate>
                                        </ToolTip.ContentTemplate>
                                    </ToolTip>
                                </dx:BoolToObjectConverter.TrueValue>
                            </dx:BoolToObjectConverter>
                        </Binding.Converter>
                    </Binding>
                </ToolTipService.ToolTip>
                <dx:DataContentPresenter Content="{Binding}" ContentTemplateSelector="{Binding Path=(dxgcore:RowData.CurrentRowData).View.ActualDataRowTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" />
            </dxg:GridRowContent>
        </ContentControl>
    </ControlTemplate>
    <DataTemplate x:Key="{dxgt:GridRowThemeKey ThemeName=Simple, ResourceKey=DataRowTemplate}">
        <dxg:GridScrollablePart x:Name="ScrollablePart" FixedColumnsDelimiterTemplate="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=FixedColumnsDelimiterTemplate}}" ScrollingMargin="{Binding Path=DataContext.View.ScrollingVirtualizationMargin, RelativeSource={RelativeSource TemplatedParent}}" FitContentWidth="{Binding Path=DataContext.View.FitColumnWidth, RelativeSource={RelativeSource TemplatedParent}}" dxg:GridControl.CurrentView="{Binding Path=DataContext.View, RelativeSource={RelativeSource TemplatedParent}}">
            <dxg:GridScrollablePart.FitContent>
                <ContentPresenter Content="{Binding DataContext, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{DynamicResource {dxgt:GridRowThemeKey ThemeName=Simple, ResourceKey=FitColumnContentTemplate}}" dxg:GridPopupMenu.GridMenuType="RowCell" dxb:BarManager.DXContextMenu="{Binding Path=DataContext.View.GridMenu, RelativeSource={RelativeSource TemplatedParent}}" />
            </dxg:GridScrollablePart.FitContent>
            <dxg:GridScrollablePart.FixedLeftContent>
                <dxg:CellItemsControl dxg:GridControl.CurrentView="{Binding View}" ItemsSource="{Binding Path=DataContext.FixedLeftCellData, RelativeSource={RelativeSource TemplatedParent}}" ItemsPanel="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=FixedLeftNoneDropPanelTemplate}}">
                </dxg:CellItemsControl>
            </dxg:GridScrollablePart.FixedLeftContent>
            <dxg:GridScrollablePart.FixedRightContent>
                <dxg:CellItemsControl dxg:GridControl.CurrentView="{Binding View}" ItemsSource="{Binding Path=DataContext.FixedRightCellData, RelativeSource={RelativeSource TemplatedParent}}" ItemsPanel="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=FixedRightNoneDropPanelTemplate}}">
                </dxg:CellItemsControl>
            </dxg:GridScrollablePart.FixedRightContent>
            <dxg:GridScrollablePart.FixedNoneContent>
                <dxg:CellItemsControl dxg:GridControl.CurrentView="{Binding View}" ItemsSource="{Binding Path=DataContext.FixedNoneCellData, RelativeSource={RelativeSource TemplatedParent}}" ItemsPanel="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=FixedNoneDropPanelTemplate}}">
                </dxg:CellItemsControl>
            </dxg:GridScrollablePart.FixedNoneContent>
        </dxg:GridScrollablePart>
    </DataTemplate>
	<ControlTemplate x:Key="{dxgt:GroupRowThemeKey ThemeName=Simple, ResourceKey=GroupRowControlTemplate}">
        <Grid x:Name="group">
			<ContentControl Template="{DynamicResource {dxgt:GroupRowThemeKey ThemeName=Simple, ResourceKey=GroupRowControlContainerTemplate}}">
				<dx:DXDockPanel>
                    <ContentControl dx:DXDockPanel.Dock="Top" Template="{DynamicResource {dxgt:GroupRowThemeKey ThemeName=Simple, ResourceKey=GroupRowControlHeaderContentTemplate}}">
                        <dx:DoubleClicker CommandParameter="{Binding RowHandle.Value}" Command="{Binding View.Commands.ChangeGroupExpanded}" HorizontalContentAlignment="Stretch">
                            <dxg:GroupGridRowPresenter x:Name="PART_HeaderContentPresenter" dx:ExpandHelper.IsExpanded="{Binding IsExpanded}" dx:ExpandHelper.ExpandSpeed="{Binding Path=View.(dx:ExpandHelper.ExpandSpeed)}" ContentTemplateSelector="{Binding Path=View.ActualGroupRowTemplateSelector}" Content="{Binding}" />
                        </dx:DoubleClicker>
					</ContentControl>
                    <dx:DXExpander Tag="Simple" AllowAddingEvent="True" dx:DXDockPanel.Dock="Top" dxg:RowIndicatorViewInfo.AnimationProgress="{Binding Path=AnimationProgress, RelativeSource={RelativeSource Self}, Mode=OneWay}" Name="Expander" Style="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=GroupRowControlExpanderStyle}}" dx:FrameworkElementHelper.IsClipped="True">
                        <dxg:GridItemsContainer x:Name="PART_ItemsContainer" dxg:RowIndicatorViewInfo.VisibleSize="{Binding Path=(dx:ExpandHelper.VisibleSize), RelativeSource={RelativeSource Self}, Mode=OneWay}" HorizontalAlignment="Stretch" Content="{Binding Path=RowsContainer}" />
					</dx:DXExpander>
                </dx:DXDockPanel>
			</ContentControl>
		</Grid>
	</ControlTemplate>
    <Style x:Key="{dxgt:GridRowThemeKey ThemeName=Simple, ResourceKey=CellStyle}" TargetType="{x:Type dxgcore:CellContentPresenter}">
        <Setter Property="Background" Value="{DynamicResource {dxgt:GridRowThemeKey ThemeName=Simple, ResourceKey=CellBorderNoneBrush}}" />
        <Style.Triggers>
            <Trigger Property="SelectionState" Value="Selected">
                <Setter Property="Background" Value="{DynamicResource {dxgt:GridRowThemeKey ThemeName=Simple, ResourceKey=BorderSelectedBrush}}" />
            </Trigger>
            <Trigger Property="SelectionState" Value="Focused">
                <Setter Property="Background" Value="{DynamicResource {dxgt:GridRowThemeKey ThemeName=Simple, ResourceKey=CellBorderFocusedBrush}}" />
                <Setter Property="TextBlock.Foreground" Value="{DynamicResource {dxgt:GridRowThemeKey ThemeName=Simple, ResourceKey=CellTextFocusedBrush}}" />
            </Trigger>
            <Trigger Property="SelectionState" Value="FocusedAndSelected">
                <Setter Property="Background" Value="{DynamicResource {dxgt:GridRowThemeKey ThemeName=Simple, ResourceKey=BorderFocusedBrush}}" />
                <Setter Property="TextBlock.Foreground" Value="{DynamicResource {dxgt:GridRowThemeKey ThemeName=Simple, ResourceKey=TextFocusedBrush}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>