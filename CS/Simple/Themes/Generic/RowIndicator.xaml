<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxgcore="http://schemas.devexpress.com/winfx/2008/xaml/grid" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars" xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid" xmlns:dxght="http://schemas.devexpress.com/winfx/2008/xaml/grid/internal" xmlns:dxgt="http://schemas.devexpress.com/winfx/2008/xaml/grid/themekeys" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">

    <dx:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />

    <ControlTemplate x:Key="{dxgt:RowIndicatorThemeKey ThemeName=Simple, ResourceKey=ItemsControlItemPanelTemplate}">
        <dx:StackVisibleIndexPanel Orientation="Vertical" ArrangeAccordingToVisibleIndex="True" />
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:RowIndicatorThemeKey ThemeName=Simple, ResourceKey=ItemTemplate}">
        <ContentPresenter x:Name="PART_Indicator" Content="{Binding DataContext, RelativeSource={RelativeSource TemplatedParent}}" Height="{Binding Path=(dxg:RowIndicatorViewInfo.ActualRowIndicatorHeight)}" ContentTemplate="{DynamicResource {dxgt:RowIndicatorThemeKey ThemeName=Simple, ResourceKey=RowTemplate}}" dxg:GridViewBase.RowHandle="{Binding Path=RowHandle}" dxg:GridPopupMenu.GridMenuType="RowCell" dxb:BarManager.DXContextMenu="{Binding Path=(dxg:GridControl.ActiveView).GridMenu, RelativeSource={RelativeSource TemplatedParent}}" />
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:RowIndicatorThemeKey ThemeName=Simple, ResourceKey=GroupPresenterTemplate}">
        <ContentControl Template="{DynamicResource {dxgt:RowIndicatorThemeKey ThemeName=Simple, ResourceKey=GroupBorderTemplate}}">
            <StackPanel>
                <ContentPresenter x:Name="PART_Indicator" Content="{Binding DataContext, RelativeSource={RelativeSource TemplatedParent}}" Height="{Binding Path=(dxg:RowIndicatorViewInfo.ActualRowIndicatorHeight)}" ContentTemplate="{DynamicResource {dxgt:RowIndicatorThemeKey ThemeName=Simple, ResourceKey=GroupRowTemplate}}" dxg:GridViewBase.RowHandle="{Binding Path=RowHandle}" Visibility="{Binding IsGroupRowVisible, Converter={StaticResource BoolToVisibilityConverter}}" />
                <dx:DXExpander AnimationProgress="{Binding Path=(dxg:RowIndicatorViewInfo.AnimationProgress)}" Style="{DynamicResource {dxgt:GroupRowThemeKey ThemeName=Simple, ResourceKey=GroupRowControlExpanderStyle}}" Margin="0" dx:FrameworkElementHelper.IsClipped="True">
                    <ContentControl Template="{DynamicResource {dxgt:RowIndicatorThemeKey ThemeName=Simple, ResourceKey=GroupItemsControlTemplate}}">
                        <dx:CachedItemsControl ItemsSource="{Binding Path=RowsContainer.Items}" ItemsPanel="{DynamicResource {dxgt:RowIndicatorThemeKey ThemeName=Simple, ResourceKey=ItemsControlItemPanelTemplate}}" dx:ExpandHelper.VisibleSize="{Binding Path=(dxg:RowIndicatorViewInfo.VisibleSize)}" ItemTemplate="{Binding ItemsControlItemTemplate, RelativeSource={RelativeSource TemplatedParent}}">
                        </dx:CachedItemsControl>
                    </ContentControl>
                </dx:DXExpander>
            </StackPanel>
        </ContentControl>
    </ControlTemplate>

    <DataTemplate x:Key="{dxgt:RowIndicatorThemeKey ThemeName=Simple, ResourceKey=ItemsControlItemTemplate}">
        <dxg:RowIndicatorControl RowData="{Binding}" RowTemplate="{DynamicResource {dxgt:RowIndicatorThemeKey ThemeName=Simple, ResourceKey=ItemTemplate}}" GroupRowTemplate="{DynamicResource {dxgt:RowIndicatorThemeKey ThemeName=Simple, ResourceKey=GroupPresenterTemplate}}" ItemsControlItemTemplate="{Binding ContentTemplate, RelativeSource={RelativeSource TemplatedParent}}">

            <dxgcore:RowData.CurrentRowData>
                <Binding />
            </dxgcore:RowData.CurrentRowData>
            <dxgcore:RowData.RowData>
                <Binding />
            </dxgcore:RowData.RowData>
            <dxg:GridViewHitInfoBase.HitTestAcceptor>
                <dxght:RowIndicatorTableViewHitTestAcceptor />
            </dxg:GridViewHitInfoBase.HitTestAcceptor>
        </dxg:RowIndicatorControl>
    </DataTemplate>
    <DataTemplate x:Key="{dxgt:RowIndicatorThemeKey ThemeName=Simple, ResourceKey=IconPresenterTemplate}">
        <Border x:Name="errorIndicatorBorder" Background="Transparent">
            <ContentPresenter x:Name="iconPresenter" Content="{Binding DataContext, RelativeSource={RelativeSource TemplatedParent}}" />
        </Border>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=IndicatorState}" Value="None">
                <Setter Property="ContentTemplate" TargetName="iconPresenter">
                    <Setter.Value>
                        <DataTemplate>
                            <Grid />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IndicatorState}" Value="Focused">
                <Setter Property="ContentTemplate" Value="{DynamicResource {dxgt:RowIndicatorThemeKey ThemeName=Simple, ResourceKey=FocusedIconTemplate}}" TargetName="iconPresenter" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IndicatorState}" Value="Changed">
                <Setter Property="ContentTemplate" Value="{DynamicResource {dxgt:RowIndicatorThemeKey ThemeName=Simple, ResourceKey=ChangedIconTemplate}}" TargetName="iconPresenter" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IndicatorState}" Value="NewItemRow">
                <Setter Property="ContentTemplate" Value="{DynamicResource {dxgt:RowIndicatorThemeKey ThemeName=Simple, ResourceKey=NewItemRowIconTemplate}}" TargetName="iconPresenter" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IndicatorState}" Value="Editing">
                <Setter Property="ContentTemplate" Value="{DynamicResource {dxgt:RowIndicatorThemeKey ThemeName=Simple, ResourceKey=EditingIconTemplate}}" TargetName="iconPresenter" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IndicatorState}" Value="Error">
                <Setter Property="ContentTemplate" Value="{DynamicResource {dxgt:RowIndicatorThemeKey ThemeName=Simple, ResourceKey=ErrorIconTemplate}}" TargetName="iconPresenter" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IndicatorState}" Value="FocusedError">
                <Setter Property="ContentTemplate" Value="{DynamicResource {dxgt:RowIndicatorThemeKey ThemeName=Simple, ResourceKey=FocusedErrorIconTemplate}}" TargetName="iconPresenter" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IndicatorState}" Value="AutoFilterRow">
                <Setter Property="ContentTemplate" Value="{DynamicResource {dxgt:RowIndicatorThemeKey ThemeName=Simple, ResourceKey=AutoFilterRowIconTemplate}}" TargetName="iconPresenter" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxe:BaseEdit.HasValidationError)}" Value="True">
                <Setter Property="ToolTip" TargetName="errorIndicatorBorder">
                    <Setter.Value>
                        <DockPanel>
                            <dxe:ErrorControl Content="{Binding Path=(dxe:BaseEdit.ValidationError)}" />
                            <ContentPresenter VerticalAlignment="Center" Content="{Binding Path=(dxe:BaseEdit.ValidationError).ErrorContent}" />
                        </DockPanel>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </DataTemplate.Triggers>

    </DataTemplate>

    <DataTemplate x:Key="{dxgt:RowIndicatorThemeKey ThemeName=Simple, ResourceKey=PresenterTemplate}">
        <dx:CachedItemsControl ItemsSource="{Binding Path=Items}" ItemTemplate="{DynamicResource {dxgt:RowIndicatorThemeKey ThemeName=Simple, ResourceKey=ItemsControlItemTemplate}}" ItemsPanel="{DynamicResource {dxgt:RowIndicatorThemeKey ThemeName=Simple, ResourceKey=ItemsControlItemPanelTemplate}}" />
    </DataTemplate>
</ResourceDictionary>