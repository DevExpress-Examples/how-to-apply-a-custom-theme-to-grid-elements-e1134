<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxgcore="http://schemas.devexpress.com/winfx/2008/xaml/grid" xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid" xmlns:dxght="http://schemas.devexpress.com/winfx/2008/xaml/grid/internal" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:dxgt="http://schemas.devexpress.com/winfx/2008/xaml/grid/themekeys" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">
    <dx:EnumToVisibilityConverter x:Key="EnumToVisibilityConverter" />

    <DataTemplate x:Key="{dxgt:GridColumnHeaderThemeKey ResourceKey=ContentTemplate}">
        <ContentPresenter Name="textBlock" Content="{Binding}" Style="{Binding Path=(dxg:GridColumnHeader.GridColumn).ActualColumnHeaderContentStyle, RelativeSource={RelativeSource TemplatedParent}}" />
    </DataTemplate>
    <DataTemplate x:Key="{dxgt:GridColumnHeaderThemeKey ResourceKey=CustomizationAreaTemplate}">
    </DataTemplate>
    <Style x:Key="{dxgt:GridColumnHeaderThemeKey ThemeName=Simple, ResourceKey=ContentStyle}" TargetType="{x:Type ContentPresenter}">
        <Setter Property="TextElement.FontFamily" Value="Courier New" />
        <Setter Property="TextElement.Foreground" Value="Black" />
    </Style>
    <Style x:Key="{dxgt:GridColumnHeaderThemeKey ResourceKey=ResizerStyle}" TargetType="{x:Type dx:DXThumb}">
        <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.ResizeFrameVerticalBorderWidthKey}}" />
        <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.ResizeFrameHorizontalBorderHeightKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dx:DXThumb}">
                    <Grid Background="Transparent" dx:DragManager.IsStartDragPlace="False" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="dxg:GridViewHitInfoBase.HitTestAcceptor">
            <Setter.Value>
                <dxght:ColumnEdgeTableViewHitTestAcceptor />
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="{dxgt:GridColumnHeaderThemeKey ResourceKey=ColumnChooserTemplate}">
        <Grid dx:DragManager.IsStartDragPlace="false">
            <ContentControl Style="{DynamicResource {dxgt:GridColumnHeaderThemeKey ResourceKey=ContentBorderStyle}}" dxg:GridColumn.HeaderPresenterType="{Binding Path=(dxg:GridColumn.HeaderPresenterType), RelativeSource={RelativeSource TemplatedParent}}">
                <Button dx:DragManager.IsStartDragPlace="true" Name="PART_ColumnHeaderButton" dxg:GridColumnHeader.GridColumn="{Binding Path=(dxg:GridColumnHeader.GridColumn), RelativeSource={RelativeSource TemplatedParent}}" dxg:GridColumn.HeaderPresenterType="{Binding Path=(dxg:GridColumn.HeaderPresenterType), RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource {dxgt:GridColumnHeaderThemeKey ThemeName=Simple, ResourceKey=ButtonStyle}}" />
            </ContentControl>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxgt:GridColumnHeaderThemeKey ThemeName=Simple, ResourceKey=FilterAreaTemplate}" TargetType="{x:Type dxe:PopupBaseEdit}">
        <ToggleButton Template="{DynamicResource {dxgt:GridColumnHeaderThemeKey ThemeName=Simple, ResourceKey=ColumnFilterTemplate}}" IsChecked="{Binding Path=IsPopupOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" HorizontalAlignment="Left" VerticalAlignment="Top" Focusable="False" Foreground="{Binding Path=Parent.Foreground, RelativeSource={RelativeSource TemplatedParent}}" dxg:GridColumn.ColumnPosition="{Binding Path=(dxg:GridColumn.ColumnPosition), RelativeSource={RelativeSource TemplatedParent}}" />
    </ControlTemplate>
    <Style x:Key="{dxgt:GridColumnHeaderThemeKey ResourceKey=HeaderCustomizationAreaStyle}" TargetType="{x:Type ContentPresenter}">
    </Style>
    <Style x:Key="{dxgt:GridColumnHeaderThemeKey ResourceKey=ContentBorderStyle}" TargetType="{x:Type ContentControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Border x:Name="outerBorder">
                            <Border.Visibility>
                                <Binding Path="(dxg:GridColumn.HeaderPresenterType)" RelativeSource="{RelativeSource TemplatedParent}" ConverterParameter="GroupPanel">
                                    <Binding.Converter>
                                        <dx:EnumToVisibilityConverter />
                                    </Binding.Converter>
                                </Binding>
                            </Border.Visibility>
                            <Border.Margin>
                                <Binding Path="(dxg:GridColumn.GroupIndex)">
                                    <Binding.Converter>
                                        <dxg:GroupPanelPaddingConverter Offset="5" />
                                    </Binding.Converter>
                                </Binding>
                            </Border.Margin>
                        </Border>
                        <Border x:Name="border0" Grid.Row="1">
                            <Border.Padding>
                                <Binding Path="(dxg:GridColumn.HeaderPresenterType)" RelativeSource="{RelativeSource TemplatedParent}">
                                    <Binding.Converter>
                                        <dx:EnumToObjectConverter DefaultValue="0">
                                            <dx:EnumToObjectConverter.Values>
                                                <Thickness x:Key="GroupPanel">2,0,2,0</Thickness>
                                            </dx:EnumToObjectConverter.Values>
                                        </dx:EnumToObjectConverter>
                                    </Binding.Converter>
                                </Binding>
                            </Border.Padding>
                            <Border.VerticalAlignment>
                                <Binding Path="(dxg:GridColumn.HeaderPresenterType)" RelativeSource="{RelativeSource TemplatedParent}">
                                    <Binding.Converter>
                                        <dx:EnumToObjectConverter DefaultValue="Stretch">
                                            <dx:EnumToObjectConverter.Values>
                                                <VerticalAlignment x:Key="GroupPanel">Top</VerticalAlignment>
                                            </dx:EnumToObjectConverter.Values>
                                        </dx:EnumToObjectConverter>
                                    </Binding.Converter>
                                </Binding>
                            </Border.VerticalAlignment>
                            <ContentPresenter />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <dx:ObjectToVisibilityConverter x:Key="ObjectToVisibilityConverter"/>
    <ControlTemplate x:Key="{dxgt:GridColumnHeaderThemeKey ThemeName=Simple, ResourceKey=ControlTemplate}">
        <Grid dx:DragManager.IsStartDragPlace="false">
            <Grid Name="dropPlaceGrid">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Border Name="PART_BorderPrevious" Background="Transparent" dxg:GridColumn.DropPlace="Previous" />
                <Border Name="PART_BorderNext" Background="Transparent" dxg:GridColumn.DropPlace="Next" />
            </Grid>
            <Grid>
                <ContentControl Style="{DynamicResource {dxgt:GridColumnHeaderThemeKey ResourceKey=ContentBorderStyle}}" dxg:GridColumn.HeaderPresenterType="{Binding Path=(dxg:GridColumn.HeaderPresenterType), RelativeSource={RelativeSource TemplatedParent}}">
                    <Button dxg:GridColumnHeader.GridColumn="{Binding Path=(dxg:GridColumnHeader.GridColumn), RelativeSource={RelativeSource TemplatedParent}}" dxg:GridColumn.HeaderPresenterType="{Binding Path=(dxg:GridColumn.HeaderPresenterType), RelativeSource={RelativeSource TemplatedParent}}" dxg:GridColumnHeader.ColumnFilterPopup="{Binding Path=(dxg:GridColumnHeader.ColumnFilterPopup), RelativeSource={RelativeSource TemplatedParent}}" dxg:GridColumnHeader.IsFilterButtonVisible="{Binding Path=(dxg:GridColumnHeader.IsFilterButtonVisible), RelativeSource={RelativeSource TemplatedParent}}" dxg:GridColumnHeader.ActualShowFilterButton="{Binding Path=(dxg:GridColumnHeader.ActualShowFilterButton), RelativeSource={RelativeSource TemplatedParent}}" dx:DragManager.IsStartDragPlace="true" Name="PART_ColumnHeaderButton" Focusable="False" Command="{Binding Path=(dxg:GridColumnHeader.GridColumn).Commands.ChangeColumnSortOrder, RelativeSource={RelativeSource TemplatedParent}}" dxg:GridColumn.ColumnPosition="{Binding Path=(dxg:GridColumn.ColumnPosition), RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource {dxgt:GridColumnHeaderThemeKey ThemeName=Simple, ResourceKey=ButtonStyle}}">
                        <ToolTipService.ToolTip>
                            <dxg:ToolTipWithSwitchedVisibility VisibilityWithCollapsedDefault ="{Binding Path=(dxg:GridColumnHeader.GridColumn).HeaderToolTip, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ObjectToVisibilityConverter}}"
                                     ContentTemplate="{Binding Path=(dxg:GridColumnHeader.GridColumn).ActualHeaderToolTipTemplate, RelativeSource={RelativeSource TemplatedParent}}">
                                <Binding Path="(dxg:GridColumnHeader.GridColumn).HeaderToolTip" RelativeSource="{RelativeSource TemplatedParent}" />
                            </dxg:ToolTipWithSwitchedVisibility>
                        </ToolTipService.ToolTip>
                    </Button>
                </ContentControl>
                <dx:DXThumb Name="PART_HeaderGripper" HorizontalAlignment="Right" Style="{DynamicResource {dxgt:GridColumnHeaderThemeKey ResourceKey=ResizerStyle}}" Cursor="SizeWE" Visibility="Collapsed" />
            </Grid>
        </Grid>
    </ControlTemplate>
    <Style x:Key="{dxgt:GridColumnHeaderThemeKey ThemeName=Simple, ResourceKey=ButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="Button.Template">
            <Setter.Value>
                <ControlTemplate>
                    <dxg:ColumnHeaderContentControl Template="{DynamicResource {dxgt:GridColumnHeaderThemeKey ThemeName=Simple, ResourceKey=ButtonContentTemplate}}" dxg:GridColumn.ColumnPosition="{Binding Path=(dxg:GridColumn.ColumnPosition), RelativeSource={RelativeSource TemplatedParent}}" IsPressed="{Binding IsPressed, RelativeSource={RelativeSource TemplatedParent}}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid Grid.Column="0" HorizontalAlignment="Left">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <ContentControl x:Name="HeaderContentControl">
                                    <dxg:ColumnHeaderContentPresenter HeaderPresenterType="{Binding Path=(dxg:GridColumn.HeaderPresenterType), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplateSelector="{Binding Path=(dxg:GridColumnHeader.GridColumn).ActualHeaderTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="0" x:Name="HeaderContent" HorizontalAlignment="Left" dxg:GridColumnHeader.GridColumn="{Binding Path=(dxg:GridColumnHeader.GridColumn), RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </ContentControl>
                                <dxgcore:ColumnHeaderFilterControl x:Name="PART_ColumnFilter" dxg:GridColumn.ColumnPosition="{Binding Path=(dxg:GridColumn.ColumnPosition), RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="1" VerticalAlignment="Top" ColumnFilterPopup="{Binding Path=(dxg:GridColumnHeader.ColumnFilterPopup), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                                    <dxgcore:ColumnHeaderFilterControl.Opacity>
                                        <Binding Path="(dxg:GridColumnHeader.IsFilterButtonVisible)" RelativeSource="{RelativeSource TemplatedParent}">
                                            <Binding.Converter>
                                                <dx:BoolToObjectConverter FalseValue="0" TrueValue="1" />
                                            </Binding.Converter>
                                        </Binding>
                                    </dxgcore:ColumnHeaderFilterControl.Opacity>
                                    <dxgcore:ColumnHeaderFilterControl.Visibility>
                                        <Binding Path="(dxg:GridColumnHeader.ActualShowFilterButton)" RelativeSource="{RelativeSource TemplatedParent}">
                                            <Binding.Converter>
                                                <dx:BooleanToVisibilityConverter />
                                            </Binding.Converter>
                                        </Binding>
                                    </dxgcore:ColumnHeaderFilterControl.Visibility>
                                    <dxg:GridViewHitInfoBase.HitTestAcceptor>
                                        <Binding Path="(dxg:GridColumn.HeaderPresenterType)" RelativeSource="{RelativeSource TemplatedParent}">
                                            <Binding.Converter>
                                                <dx:EnumToObjectConverter>
                                                    <dx:EnumToObjectConverter.DefaultValue>
                                                        <dxght:ColumnHeaderFilterButtonTableViewHitTestAcceptor />
                                                    </dx:EnumToObjectConverter.DefaultValue>
                                                    <dx:EnumToObjectConverter.Values>
                                                        <dxght:GroupPanelColumnHeaderFilterButtonTableViewHitTestAcceptor x:Key="GroupPanel" />
                                                    </dx:EnumToObjectConverter.Values>
                                                </dx:EnumToObjectConverter>
                                            </Binding.Converter>
                                        </Binding>
                                    </dxg:GridViewHitInfoBase.HitTestAcceptor>
                                </dxgcore:ColumnHeaderFilterControl>
                            </Grid>
                            <Border x:Name="CaptionToArrowIndent" Grid.Column="2" Style="{DynamicResource {dxgt:GridColumnHeaderThemeKey ResourceKey=CaptionToArrowIndentBorderStyle}}" Visibility="Collapsed" />
                            <dx:XPFContentPresenter x:Name="HeaderCustomizationArea" Content="{Binding Path=(dxg:GridColumnHeader.GridColumn), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplateSelector="{Binding Path=(dxg:GridColumnHeader.GridColumn).ActualHeaderCustomizationAreaTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" dxg:GridColumnHeader.GridColumn="{Binding Path=(dxg:GridColumnHeader.GridColumn), RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="1" Style="{DynamicResource {dxgt:GridColumnHeaderThemeKey ResourceKey=HeaderCustomizationAreaStyle}}">
                                <dx:XPFContentPresenter.Visibility>
                                    <Binding Path="(dxg:GridColumn.HeaderPresenterType)" RelativeSource="{RelativeSource TemplatedParent}">
                                        <Binding.Converter>
                                            <dx:EnumToObjectConverter DefaultValue="Visible">
                                                <dx:EnumToObjectConverter.Values>
                                                    <Visibility x:Key="ColumnChooser">Collapsed</Visibility>
                                                </dx:EnumToObjectConverter.Values>
                                            </dx:EnumToObjectConverter>
                                        </Binding.Converter>
                                    </Binding>
                                </dx:XPFContentPresenter.Visibility>
                            </dx:XPFContentPresenter>
                            <dxgcore:ColumnHeaderSortIndicatorControl x:Name="SortUp" Grid.Column="2" Style="{DynamicResource {dxgt:GridColumnHeaderThemeKey ThemeName=Simple, ResourceKey=SortArrowUpStyle}}" Template="{DynamicResource {dxgt:GridColumnHeaderThemeKey ThemeName=Simple, ResourceKey=SortArrowUpTemplate}}" Visibility="{Binding SortOrder, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter=Ascending, FallbackValue=Collapsed}" />
                            <dxgcore:ColumnHeaderSortIndicatorControl x:Name="SortDown" Grid.Column="2" Style="{DynamicResource {dxgt:GridColumnHeaderThemeKey ThemeName=Simple, ResourceKey=SortArrowDownStyle}}" Template="{DynamicResource {dxgt:GridColumnHeaderThemeKey ThemeName=Simple, ResourceKey=SortArrowDownTemplate}}" Visibility="{Binding SortOrder, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter=Descending, FallbackValue=Collapsed}" />
                        </Grid>
                    </dxg:ColumnHeaderContentControl>
                    <ControlTemplate.Triggers>
                        <Trigger Property="dxg:GridColumn.ColumnPosition" Value="Standalone">
                            <Setter TargetName="CaptionToArrowIndent" Property="Visibility" Value="Visible" />
                            <Setter TargetName="SortDown" Property="Foreground" Value="{DynamicResource {dxgt:GridColumnHeaderThemeKey ResourceKey=GroupHeaderCaptionForeground}}" />
                            <Setter TargetName="SortUp" Property="Foreground" Value="{DynamicResource {dxgt:GridColumnHeaderThemeKey ResourceKey=GroupHeaderCaptionForeground}}" />
                            <Setter TargetName="HeaderContentControl" Property="Foreground" Value="{DynamicResource {dxgt:GridColumnHeaderThemeKey ResourceKey=GroupHeaderCaptionForeground}}" />
                            <Setter TargetName="PART_ColumnFilter" Property="Foreground" Value="{DynamicResource {dxgt:GridColumnHeaderThemeKey ResourceKey=GroupHeaderCaptionForeground}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>