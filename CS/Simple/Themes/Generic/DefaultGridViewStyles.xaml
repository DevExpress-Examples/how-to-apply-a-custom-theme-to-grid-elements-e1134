<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxgcore="http://schemas.devexpress.com/winfx/2008/xaml/grid" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxe1="clr-namespace:DevExpress.Xpf.Editors.Filtering;assembly=DevExpress.Xpf.Core.v10.2" xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid" xmlns:dxgt="http://schemas.devexpress.com/winfx/2008/xaml/grid/themekeys" xmlns:dxght="http://schemas.devexpress.com/winfx/2008/xaml/grid/internal" xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys">
	<Style x:Key="{dxdst:DefaultStyleThemeKey ThemeName=Simple, FullName=DevExpress.Xpf.Grid.FilterCellContentPresenter}" TargetType="{x:Type dxg:FilterCellContentPresenter}">
		<Setter Property="Template" Value="{DynamicResource {dxgt:GridRowThemeKey ThemeName=Simple, ResourceKey=FilterCellContentPresenterTemplate}}" />
        <Setter Property="dxg:GridViewHitInfoBase.HitTestAcceptor">
            <Setter.Value>
                <dxght:RowCellTableViewHitTestAcceptor />
            </Setter.Value>
        </Setter>
    </Style>

	<Style x:Key="{dxdst:DefaultStyleThemeKey ThemeName=Simple, FullName=DevExpress.Xpf.Grid.NewItemRowCellContentPresenter}" TargetType="{x:Type dxg:NewItemRowCellContentPresenter}">
		<Setter Property="Template" Value="{DynamicResource {dxgt:GridRowThemeKey ThemeName=Simple, ResourceKey=NewItemRowCellContentPresenterTemplate}}" />
        <Setter Property="dxg:GridViewHitInfoBase.HitTestAcceptor">
            <Setter.Value>
                <dxght:RowCellTableViewHitTestAcceptor />
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{dxdst:DefaultStyleThemeKey ThemeName=Simple, FullName=DevExpress.Xpf.Grid.GridRowContent}" TargetType="{x:Type dxg:GridRowContent}">
        <Setter Property="Template" Value="{DynamicResource {dxgt:GridRowThemeKey ThemeName=Simple, ResourceKey=RowControlContainerTemplate}}" />
    </Style>
    <Style x:Key="{dxdst:DefaultStyleThemeKey ThemeName=Simple, FullName=DevExpress.Xpf.Grid.GroupGridRowContent}" TargetType="{x:Type dxg:GroupGridRowContent}">
        <Setter Property="Template" Value="{DynamicResource {dxgt:GroupRowThemeKey ThemeName=Simple, ResourceKey=GroupRowContentTemplate}}" />
    </Style>
    <DataTemplate x:Key="{dxgt:GridColumnHeaderThemeKey ResourceKey=DragElementTemplate}">
        <Grid VerticalAlignment="Top" HorizontalAlignment="Left" DataContext="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <dxg:DragGridColumnHeader dxg:GridColumnHeader.GridColumn="{Binding}" Width="{Binding Path=(dxg:GridColumnHeader.DragElementSize).Width, RelativeSource={RelativeSource TemplatedParent}}" Height="{Binding Path=(dxg:GridColumnHeader.DragElementSize).Height, RelativeSource={RelativeSource TemplatedParent}}" />
            <dx:DragIconControl Grid.Row="1" Grid.Column="1" Margin="-12,-12,0,0" Name="dropIndicator" DragType="Remove">
                <dx:DragIconControl.Opacity>
                    <Binding Path="(dxg:GridColumnHeader.IsInDropArea)" RelativeSource="{RelativeSource TemplatedParent}">
                        <Binding.Converter>
                            <dx:BoolToObjectConverter TrueValue="1" FalseValue="0" />
                        </Binding.Converter>
                    </Binding>
                </dx:DragIconControl.Opacity>
            </dx:DragIconControl>
        </Grid>
    </DataTemplate>
    <Style x:Key="{dxdst:DefaultStyleThemeKey ThemeName=Simple, FullName=DevExpress.Xpf.Grid.ColumnChooserControl}" TargetType="{x:Type dxg:ColumnChooserControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxg:ColumnChooserControl}">
                    <ScrollViewer VerticalScrollBarVisibility="Auto">
                        <ScrollViewer.Template>
                            <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                <Grid Background="{DynamicResource {dxgt:TableViewThemeKey ThemeName=Simple, ResourceKey=ColumnChooserBackgroundBrush}}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <ScrollContentPresenter Name="PART_ScrollContentPresenter" Content="{TemplateBinding Content}" />
                                    <ScrollBar Grid.Column="1" Grid.RowSpan="2" Value="{Binding VerticalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" Maximum="{Binding ScrollableHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" ViewportSize="{Binding ViewportHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" Visibility="{Binding ComputedVerticalScrollBarVisibility, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                                        <ScrollBar.Name>PART_VerticalScrollBar</ScrollBar.Name>
                                    </ScrollBar>
                                    <ScrollBar Grid.Row="1" Orientation="Horizontal" Value="{Binding HorizontalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" Maximum="{Binding ScrollableWidth, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" ViewportSize="{Binding ViewportWidth, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" Visibility="{Binding ComputedHorizontalScrollBarVisibility, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                                        <ScrollBar.Name>PART_HorizontalScrollBar</ScrollBar.Name>
                                    </ScrollBar>
                                    <Border Grid.Row="1" Grid.Column="1" x:Name="PART_HorizontalScrollCorner" Style="{DynamicResource {dxgt:ScrollBarThemeKey ResourceKey=ScrollingCornerStyle}}" Margin="0" />
                                </Grid>
                            </ControlTemplate>
                        </ScrollViewer.Template>
                        <Grid>
                            <dx:CachedItemsControl ItemsSource="{Binding Path=Owner.ColumnChooserColumns, RelativeSource={RelativeSource TemplatedParent}}">
                                <dx:CachedItemsControl.Visibility>
                                    <Binding Path="Owner.ColumnChooserColumns" RelativeSource="{RelativeSource TemplatedParent}">
                                        <Binding.Converter>
                                            <dx:ObjectToVisibilityConverter />
                                        </Binding.Converter>
                                    </Binding>
                                </dx:CachedItemsControl.Visibility>
                                <dx:CachedItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <dxg:GridColumnHeader DataContext="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" dxg:GridColumn.HeaderPresenterType="ColumnChooser" dxg:GridColumnHeader.GridColumn="{Binding}" Margin="1,1,1,0" dxg:GridColumn.ColumnPosition="Standalone" Template="{DynamicResource {dxgt:GridColumnHeaderThemeKey ThemeName=Simple, ResourceKey=ColumnChooserTemplate}}" SnapsToDevicePixels="True" dxg:GridPopupMenu.GridMenuType="Column" dxb:BarManager.DXContextMenu="{Binding Path=View.DataControlMenu}" />
                                    </DataTemplate>
                                </dx:CachedItemsControl.ItemTemplate>
                                <dx:CachedItemsControl.ItemsPanel>
                                    <ControlTemplate>
                                        <StackPanel dxg:GridColumn.HeaderPresenterType="ColumnChooser" Orientation="Vertical" Margin="1,1,1,2" />
                                    </ControlTemplate>
                                </dx:CachedItemsControl.ItemsPanel>
                            </dx:CachedItemsControl>
                            <TextBlock Style="{DynamicResource {dxgt:TableViewThemeKey ThemeName=Simple, ResourceKey=ColumnChooserDragTextStyle}}">
                                <TextBlock.Text>
                                    <Binding ConverterParameter="ColumnChooserDragText" Path="Owner.LocalizationDescriptor" RelativeSource="{RelativeSource TemplatedParent}">
                                        <Binding.Converter>
                                            <dxg:DynamicLocalizationStringValueConvertor />
                                        </Binding.Converter>
                                    </Binding>
                                </TextBlock.Text>
                                <TextBlock.Visibility>
                                    <Binding Path="Owner.ColumnChooserColumns" RelativeSource="{RelativeSource TemplatedParent}">
                                        <Binding.Converter>
                                            <dx:ObjectToVisibilityConverter Invert="True" />
                                        </Binding.Converter>
                                    </Binding>
                                </TextBlock.Visibility>
                            </TextBlock>
                        </Grid>
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="dx:DragManager.DropTargetFactory">
            <Setter.Value>
                <dxgcore:ColumnChooserDropTargetFactory />
            </Setter.Value>
        </Setter>
        <Setter Property="dxg:GridColumn.HeaderPresenterType" Value="ColumnChooser" />
    </Style>
    <Style x:Key="{dxdst:DefaultStyleThemeKey ThemeName=Simple, FullName=DevExpress.Xpf.Grid.BestFitControl}" TargetType="{x:Type dxg:BestFitControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxg:BestFitControl}">
                    <dxg:GridRowContent Style="{Binding Path=RowData.View.RowStyle, RelativeSource={RelativeSource TemplatedParent}}">
                        <dxg:GridRowContent.Template>
                            <ControlTemplate TargetType="{x:Type dxg:GridRowContent}">
                                <ContentPresenter />
                            </ControlTemplate>
                        </dxg:GridRowContent.Template>
                        <dxg:BestFitGridCellContentPresenter IsFocusedCell="{TemplateBinding IsFocusedCell}" RowData="{Binding RowData, RelativeSource={RelativeSource TemplatedParent}}" Style="{Binding Path=Column.ActualCellStyle, RelativeSource={RelativeSource TemplatedParent}}" Column="{TemplateBinding Column}" HasRightSibling="True" />
                    </dxg:GridRowContent>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{dxdst:DefaultStyleThemeKey ThemeName=Simple, FullName=DevExpress.Xpf.Grid.GridTotalSummary}" TargetType="{x:Type dxg:GridTotalSummary}">
        <Setter Property="Template" Value="{DynamicResource {dxgt:TotalSummaryThemeKey ThemeName=Simple, ResourceKey=TotalSummaryControlTemplate}}" />
    </Style>
    <dx:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <dx:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverterInverted" Invert="True" />
    <DataTemplate x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupSummaryItemTemplate}">
        <Border Style="{Binding Path=View.GroupSummaryContentStyle}">
            <StackPanel Orientation="Horizontal" Name="defaultGroupSummaryItemTemplateStackPanel">
                <TextBlock Text="{Binding Text}" />
                <TextBlock Text=", " Name="commaTextBlock" Visibility="{Binding IsLast, Converter={StaticResource BooleanToVisibilityConverterInverted}}" />
            </StackPanel>
        </Border>
    </DataTemplate>
    <Style x:Key="GridViewBaseStyle" TargetType="{x:Type dxg:GridViewBase}">
        <Setter Property="HeaderTemplate" Value="{DynamicResource {dxgt:TableViewThemeKey ThemeName=Simple, ResourceKey=HeadersTemplate}}" />
        <Setter Property="FooterTemplate" Value="{DynamicResource {dxgt:TotalSummaryThemeKey ThemeName=Simple, ResourceKey=FootersTemplate}}" />
        <Setter Property="GroupRowTemplate" Value="{DynamicResource {dxgt:GroupRowThemeKey ThemeName=Simple, ResourceKey=GroupRowTemplate}}" />
        <Setter Property="GroupValueTemplate" Value="{DynamicResource {dxgt:GroupRowThemeKey ThemeName=Simple, ResourceKey=GroupValueTemplate}}" />
        <Setter Property="DefaultGroupSummaryItemTemplate" Value="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=GroupSummaryItemTemplate}}" />
        <Setter Property="GroupSummaryItemTemplate" Value="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=GroupSummaryItemTemplate}}" />
        <Setter Property="TotalSummaryItemTemplate" Value="{DynamicResource {dxgt:TotalSummaryThemeKey ThemeName=Simple, ResourceKey=TotalSummaryItemTemplate}}" />
        <Setter Property="ColumnHeaderContentStyle" Value="{DynamicResource {dxgt:GridColumnHeaderThemeKey ThemeName=Simple, ResourceKey=ContentStyle}}" />
        <Setter Property="ColumnHeaderTemplate" Value="{DynamicResource {dxgt:GridColumnHeaderThemeKey ResourceKey=ContentTemplate}}" />
        <Setter Property="ColumnHeaderCustomizationAreaTemplate" Value="{DynamicResource {dxgt:GridColumnHeaderThemeKey ResourceKey=CustomizationAreaTemplate}}" />
        <Setter Property="CellStyle" Value="{DynamicResource {dxgt:GridRowThemeKey ThemeName=Simple, ResourceKey=CellStyle}}" />
        <Setter Property="TotalSummaryContentStyle" Value="{DynamicResource {dxgt:TotalSummaryThemeKey ResourceKey=TotalSummaryContentStyle}}" />
        <Setter Property="ColumnHeaderDragIndicatorTemplate" Value="{DynamicResource {dxgt:GridColumnHeaderThemeKey ThemeName=Simple, ResourceKey=DragIndicatorTemplate}}" />
        <Setter Property="ColumnChooserTemplate" Value="{DynamicResource {dxgt:TableViewThemeKey ThemeName=Simple, ResourceKey=ColumnChooserTemplate}}" />
        <Setter Property="Margin" Value="{DynamicResource {dxgt:TableViewThemeKey ThemeName=Simple, ResourceKey=Margin}}" />
        <Setter Property="FocusedCellBorderTemplate" Value="{DynamicResource {dxgt:GridControlThemeKey ResourceKey=FocusedCellBorderTemplate}}" />
        <Setter Property="FocusedGroupRowBorderTemplate" Value="{DynamicResource {dxgt:GridControlThemeKey ResourceKey=FocusedGroupRowBorderTemplate}}" />
        <Setter Property="AdditionalRowsFocusedCellBorderTemplate" Value="{DynamicResource {dxgt:GridControlThemeKey ResourceKey=AdditionalRowsFocusedCellBorderTemplate}}" />
    </Style>
    <Style x:Key="{dxdst:DefaultStyleThemeKey ThemeName=Simple, FullName=DevExpress.Xpf.Grid.TableView}" TargetType="{x:Type dxg:TableView}" BasedOn="{StaticResource GridViewBaseStyle}">
        <Setter Property="Template" Value="{DynamicResource {dxgt:TableViewThemeKey ThemeName=Simple, ResourceKey=ControlTemplate}}" />
        <Setter Property="RowDecorationTemplate" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=RowDecorationTemplate}}" />
        <Setter Property="RowIndicatorContentTemplate" Value="{DynamicResource {dxgt:RowIndicatorThemeKey ThemeName=Simple, ResourceKey=IconPresenterTemplate}}" />
        <Setter Property="DefaultDataRowTemplate" Value="{DynamicResource {dxgt:GridRowThemeKey ThemeName=Simple, ResourceKey=DataRowTemplate}}" />
        <Setter Property="DataRowTemplate" Value="{DynamicResource {dxgt:GridRowThemeKey ThemeName=Simple, ResourceKey=DataRowTemplate}}" />
        <Setter Property="LeftDataAreaIndent" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=LeftDataAreaIndent}}" />
        <Setter Property="RightDataAreaIndent" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=RightDataAreaIndent}}" />
        <Setter Property="LeftGroupAreaIndent" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=LeftGroupAreaIndent}}" />
        <Setter Property="RightGroupAreaIndent" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=RightGroupAreaIndent}}" />
        <Setter Property="FixedLineWidth" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=FixedLineWidth}}" />
        <Setter Property="IndicatorWidth" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=IndicatorWidth}}" />
        <Setter Property="dx:ExpandHelper.ExpandStoryboard" Value="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=ExpandingStoryboard}}" />
        <Setter Property="dx:ExpandHelper.CollapseStoryboard" Value="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=CollapsingStoryboard}}" />
        <Setter Property="PrintRowTemplate" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=PrintRowTemplate}}" />
        <Setter Property="PrintHeaderTemplate" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=PrintHeaderTemplate}}" />
        <Setter Property="PrintFooterTemplate" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=PrintFooterTemplate}}" />
        <Setter Property="PrintGroupRowTemplate" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=PrintGroupRowTemplate}}" />
        <Setter Property="PrintColumnHeaderStyle" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=DefaultPrintHeaderStyle}}" />
        <Setter Property="PrintTotalSummaryStyle" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=DefaultPrintTotalSummaryStyle}}" />
        <Setter Property="PrintGroupRowStyle" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=DefaultPrintGroupRowStyle}}" />
        <Setter Property="PrintCellStyle" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=DefaultPrintCellStyle}}" />
        <Setter Property="FocusedRowBorderTemplate" Value="{DynamicResource {dxgt:GridControlThemeKey ResourceKey=FocusedRowBorderTemplate}}" />
    </Style>
    <Style x:Key="{dxdst:DefaultStyleThemeKey ThemeName=Simple, FullName=DevExpress.Xpf.Grid.GridControl}" TargetType="{x:Type dxg:GridControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Template" Value="{DynamicResource {dxgt:GridControlThemeKey ThemeName=Simple, ResourceKey=Template}}" />
        <Setter Property="dx:DXSerializer.SerializationIDDefault" Value="GridControl" />
    </Style>
    <Style x:Key="{dxdst:DefaultStyleThemeKey ThemeName=Simple, FullName=DevExpress.Xpf.Grid.AdditionalRowContainerControl}" TargetType="{x:Type dxg:AdditionalRowContainerControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxg:AdditionalRowContainerControl}">
                    <dx:DXDockPanel>
                        <dxg:RowIndicatorControl dx:DXDockPanel.Dock="Left" Width="{TemplateBinding IndicatorWidth}" RowTemplate="{DynamicResource {dxgt:RowIndicatorThemeKey ThemeName=Simple, ResourceKey=AdditionalTemplate}}"
                                         Visibility="{Binding Path=(dxg:GridControl.CurrentView).ShowIndicator, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <dxgcore:RowData.CurrentRowData>
                                <Binding />
                            </dxgcore:RowData.CurrentRowData>
                            <dxgcore:RowData.RowData>
                                <Binding />
                            </dxgcore:RowData.RowData>
                            <dxg:GridViewHitInfoBase.HitTestAcceptor>
                                <dxght:RowIndicatorTableViewHitTestAcceptor />
                            </dxg:GridViewHitInfoBase.HitTestAcceptor>
                        </dxg:RowIndicatorControl>
                        <ContentControl Template="{Binding Path=RowTemplate, RelativeSource={RelativeSource TemplatedParent}}">
                            <dx:MeasurePixelSnapper>
                                <dxg:GridScrollablePart x:Name="ScrollablePart" FixedColumnsDelimiterTemplate="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=FixedColumnsDelimiterTemplate}}" ScrollingMargin="{Binding Path=(dxg:GridControl.CurrentView).ScrollingHeaderVirtualizationMargin, RelativeSource={RelativeSource TemplatedParent}}" FitContentWidth="{Binding Path=(dxg:GridControl.CurrentView).AdditionalRowFitColumnWidth, RelativeSource={RelativeSource TemplatedParent}}" dxg:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}">
                                    <dxg:GridScrollablePart.FitContent>
                                        <ContentPresenter Content="{Binding DataContext, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{DynamicResource {dxgt:GridRowThemeKey ThemeName=Simple, ResourceKey=FitColumnContentTemplate}}" />
                                </dxg:GridScrollablePart.FitContent>

                                    <dxg:GridScrollablePart.FixedLeftContent>
                                        <dxg:RowItemsControl Name="PART_FixedLeftColumnsItemsControl" ItemsSource="{Binding Path=FixedLeftCellData}" ItemsPanel="{DynamicResource {dxgt:TableViewThemeKey ThemeName=Simple, ResourceKey=FixedLeftNoneDropPanelTemplate}}" ItemTemplate="{TemplateBinding ItemTemplate}" />
                                    </dxg:GridScrollablePart.FixedLeftContent>
                                    <dxg:GridScrollablePart.FixedRightContent>
                                        <dxg:RowItemsControl Name="PART_FixedRightColumnsItemsControl" ItemsSource="{Binding Path=FixedRightCellData}" ItemsPanel="{DynamicResource {dxgt:TableViewThemeKey ThemeName=Simple, ResourceKey=FixedRightNoneDropPanelTemplate}}" ItemTemplate="{TemplateBinding ItemTemplate}" />
                                    </dxg:GridScrollablePart.FixedRightContent>
                                    <dxg:GridScrollablePart.FixedNoneContent>
                                        <dxg:RowItemsControl Name="PART_FixedNoneColumnsItemsControl" ItemsSource="{Binding Path=FixedNoneCellData}" ItemsPanel="{DynamicResource {dxgt:TableViewThemeKey ThemeName=Simple, ResourceKey=FixedNoneDropPanelTemplate}}" ItemTemplate="{TemplateBinding ItemTemplate}" />
                                    </dxg:GridScrollablePart.FixedNoneContent>
                                </dxg:GridScrollablePart>
                            </dx:MeasurePixelSnapper>
                        </ContentControl>
                    </dx:DXDockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="dxg:GridViewHitInfoBase.HitTestAcceptor">
            <Setter.Value>
                <dxght:RowTableViewHitTestAcceptor />
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{dxdst:DefaultStyleThemeKey ThemeName=Simple, FullName=DevExpress.Xpf.Grid.GridItemsContainer}" TargetType="{x:Type dxg:GridItemsContainer}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <ContentPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="DataRowsTemplate" Value="{DynamicResource {dxgt:GridRowThemeKey ThemeName=Simple, ResourceKey=DataRowsTemplate}}" />
        <Setter Property="GroupRowsTemplate" Value="{DynamicResource {dxgt:GroupRowThemeKey ThemeName=Simple, ResourceKey=GroupRowsTemplate}}" />
    </Style>
    <Style x:Key="{dxdst:DefaultStyleThemeKey ThemeName=Simple, FullName=DevExpress.Xpf.Grid.GridViewDataRowsControl}" TargetType="{x:Type dxg:GridViewDataRowsControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <dxg:RowsItemsControl ItemsSource="{Binding Path=Items}">
                        <dxg:RowsItemsControl.ItemsPanel>
                            <ControlTemplate>
                                <dx:StackVisibleIndexPanel Orientation="Vertical" ArrangeAccordingToVisibleIndex="True" />
                            </ControlTemplate>
                        </dxg:RowsItemsControl.ItemsPanel>
                    </dxg:RowsItemsControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{dxdst:DefaultStyleThemeKey ThemeName=Simple, FullName=DevExpress.Xpf.Grid.GridRow}" TargetType="{x:Type dxg:GridRow}">
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template" Value="{DynamicResource {dxgt:GridRowThemeKey ThemeName=Simple, ResourceKey=RowControlTemplate}}" />
        <Setter Property="dxg:GridViewHitInfoBase.HitTestAcceptor">
            <Setter.Value>
                <dxght:RowTableViewHitTestAcceptor />
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{dxdst:DefaultStyleThemeKey ThemeName=Simple, FullName=DevExpress.Xpf.Grid.GridViewGroupRowsControl}" TargetType="{x:Type dxg:GridViewGroupRowsControl}">
        <Setter Property="Template" Value="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=GroupRowsControlTemplate}}" />
    </Style>
    <Style x:Key="{dxdst:DefaultStyleThemeKey ThemeName=Simple, FullName=DevExpress.Xpf.Grid.GroupGridRow}" TargetType="{x:Type dxg:GroupGridRow}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template" Value="{DynamicResource {dxgt:GroupRowThemeKey ThemeName=Simple, ResourceKey=GroupRowControlTemplate}}" />
        <Setter Property="dxg:GridViewHitInfoBase.HitTestAcceptor">
            <Setter.Value>
                <dxght:GroupRowTableViewHitTestAcceptor />
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="{dxdst:DefaultStyleThemeKey ThemeName=Simple, FullName=DevExpress.Xpf.Grid.GridScrollablePart}" TargetType="{x:Type dxg:GridScrollablePart}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxg:GridScrollablePart}">
                    <dx:DXDockPanel LastChildFill="True">
                        <ContentPresenter Name="PART_FixedLeftContent" dxgcore:TableViewProperties.FixedAreaStyle="Left" dx:DXDockPanel.Dock="Left" DataContext="{Binding}" />
                        <ContentPresenter x:Name="fixedLeftLinePlaceHolder" ContentTemplate="{TemplateBinding FixedColumnsDelimiterTemplate}" dx:DXDockPanel.Dock="Left" Width="{Binding Path=(dxg:GridControl.CurrentView).FixedLineWidth, RelativeSource={RelativeSource TemplatedParent}}">
                            <ContentPresenter.Visibility>
                                <Binding Path="(dxg:GridControl.CurrentView).FixedLeftVisibleColumns" RelativeSource="{RelativeSource TemplatedParent}">
                                    <Binding.Converter>
                                        <dx:ObjectToVisibilityConverter />
                                    </Binding.Converter>
                                </Binding>
                            </ContentPresenter.Visibility>
                            <dxg:GridViewHitInfoBase.HitTestAcceptor>
                                <dxght:FixedLeftDivTableViewHitTestAcceptor />
                            </dxg:GridViewHitInfoBase.HitTestAcceptor>
                        </ContentPresenter>
                        <ContentPresenter Name="PART_FitContent" dx:DXDockPanel.Dock="Right" DataContext="{Binding}" Width="{Binding Path=FitContentWidth, RelativeSource={RelativeSource TemplatedParent}}" />
                        <ContentPresenter Name="PART_FixedRightContent" dxgcore:TableViewProperties.FixedAreaStyle="Right" dx:DXDockPanel.Dock="Right" DataContext="{Binding}" />
                        <ContentPresenter x:Name="fixedRightLinePlaceHolder" ContentTemplate="{TemplateBinding FixedColumnsDelimiterTemplate}" dx:DXDockPanel.Dock="Right" Width="{Binding Path=(dxg:GridControl.CurrentView).FixedLineWidth, RelativeSource={RelativeSource TemplatedParent}}">
                            <ContentPresenter.Visibility>
                                <Binding Path="(dxg:GridControl.CurrentView).FixedRightVisibleColumns" RelativeSource="{RelativeSource TemplatedParent}">
                                    <Binding.Converter>
                                        <dx:ObjectToVisibilityConverter />
                                    </Binding.Converter>
                                </Binding>
                            </ContentPresenter.Visibility>
                            <dxg:GridViewHitInfoBase.HitTestAcceptor>
                                <dxght:FixedRightDivTableViewHitTestAcceptor />
                            </dxg:GridViewHitInfoBase.HitTestAcceptor>
                        </ContentPresenter>
                        <Border Name="fixedNoneCellsBorder" ClipToBounds="True">
                            <ContentPresenter Name="PART_FixedNoneContent" DataContext="{Binding}" Margin="{Binding ScrollingMargin, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Border>
                    </dx:DXDockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{dxdst:DefaultStyleThemeKey ThemeName=Simple, FullName=DevExpress.Xpf.Grid.GridCellContentPresenter}" TargetType="{x:Type dxg:GridCellContentPresenter}">
        <Setter Property="Template" Value="{DynamicResource {dxgt:GridRowThemeKey ThemeName=Simple, ResourceKey=CellContentPresenterTemplate}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=GridDataRowDelimiterBrush}}" />
        <Setter Property="dxg:GridViewHitInfoBase.HitTestAcceptor">
            <Setter.Value>
                <dxght:RowCellTableViewHitTestAcceptor />
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="BaseDataContentPresenterStyle">
    </Style>
    <Style x:Key="{dxdst:DefaultStyleThemeKey ThemeName=Simple, FullName=DevExpress.Xpf.Grid.GroupGridRowPresenter}" TargetType="{x:Type dxg:GroupGridRowPresenter}" BasedOn="{StaticResource BaseDataContentPresenterStyle}">
    </Style>
    <Style x:Key="{dxdst:DefaultStyleThemeKey ThemeName=Simple, FullName=DevExpress.Xpf.Grid.GroupValueContentPresenter}" TargetType="{x:Type dxg:GroupValueContentPresenter}" BasedOn="{StaticResource BaseDataContentPresenterStyle}">
        <Setter Property="dxg:GridViewHitInfoBase.HitTestAcceptor">
            <Setter.Value>
                <dxght:GroupValueTableViewHitTestAcceptor />
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{dxdst:DefaultStyleThemeKey ThemeName=Simple, FullName=DevExpress.Xpf.Grid.GroupSummaryContentPresenter}" TargetType="{x:Type dxg:GroupSummaryContentPresenter}" BasedOn="{StaticResource BaseDataContentPresenterStyle}">
        <Setter Property="dxg:GridViewHitInfoBase.HitTestAcceptor">
            <Setter.Value>
                <dxght:GroupSummaryTableViewHitTestAcceptor />
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{dxdst:DefaultStyleThemeKey ThemeName=Simple, FullName=DevExpress.Xpf.Grid.TotalSummaryContentPresenter}" TargetType="{x:Type dxg:TotalSummaryContentPresenter}" BasedOn="{StaticResource BaseDataContentPresenterStyle}">
    </Style>
    <Style x:Key="{dxdst:DefaultStyleThemeKey ThemeName=Simple, FullName=DevExpress.Xpf.Grid.GridGroupExpandButton}" TargetType="{x:Type dxg:GridGroupExpandButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <dxg:GridToggleStateButton dx:DataObjectBase.DataObject="{Binding}" dx:DataObjectBase.NeedsResetEvent="True" x:Name="toggleButton" ClickMode="Press" IsChecked="{Binding Path=IsChecked, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Command="{Binding View.Commands.ChangeGroupExpanded}" CommandParameter="{Binding RowHandle.Value}" Style="{DynamicResource {dxgt:GroupRowThemeKey ThemeName=Simple, ResourceKey=ExpandButtonStyle}}" Foreground="{TemplateBinding Foreground}">
                        <dx:DoubleClicker.IsDoubleClickArea>False</dx:DoubleClicker.IsDoubleClickArea>
                    </dxg:GridToggleStateButton>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="dxg:GridViewHitInfoBase.HitTestAcceptor">
            <Setter.Value>
                <dxght:GroupRowButtonTableViewHitTestAcceptor />
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="GridColumnHeaderBaseStyle" TargetType="{x:Type dxgcore:GridColumnHeaderBase}">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template" Value="{DynamicResource {dxgt:GridColumnHeaderThemeKey ThemeName=Simple, ResourceKey=ControlTemplate}}" />
        <Setter Property="dxg:GridColumnHeader.DragElementTemplate" Value="{DynamicResource {dxgt:GridColumnHeaderThemeKey ResourceKey=DragElementTemplate}}" />
    </Style>
    <Style x:Key="{dxdst:DefaultStyleThemeKey ThemeName=Simple, FullName=DevExpress.Xpf.Grid.FitColumnHeader}" TargetType="{x:Type dxg:FitColumnHeader}" BasedOn="{StaticResource GridColumnHeaderBaseStyle}">
    </Style>
    <Style x:Key="{dxdst:DefaultStyleThemeKey ThemeName=Simple, FullName=DevExpress.Xpf.Grid.IndicatorColumnHeader}" TargetType="{x:Type dxg:IndicatorColumnHeader}" BasedOn="{StaticResource GridColumnHeaderBaseStyle}">
    </Style>
    <Style x:Key="{dxdst:DefaultStyleThemeKey ThemeName=Simple, FullName=DevExpress.Xpf.Grid.GridColumnHeader}" TargetType="{x:Type dxg:GridColumnHeader}" BasedOn="{StaticResource GridColumnHeaderBaseStyle}">
        <Setter Property="Focusable" Value="false" />
        <Setter Property="ColumnFilterPopupTemplate" Value="{DynamicResource {dxgt:GridColumnHeaderThemeKey ThemeName=Simple, ResourceKey=FilterAreaTemplate}}" />
    </Style>
    <Style x:Key="{dxdst:DefaultStyleThemeKey ThemeName=Simple, FullName=DevExpress.Xpf.Grid.DragGridColumnHeader}" TargetType="{x:Type dxg:DragGridColumnHeader}" BasedOn="{StaticResource GridColumnHeaderBaseStyle}">
        <Setter Property="Opacity" Value="0.5" />
        <Setter Property="dxg:GridColumn.HeaderPresenterType" Value="{Binding Path=(dxg:GridColumn.HeaderPresenterType)}" />
    </Style>
    <Style x:Key="{dxet:EditorListBoxThemeKey ThemeName=Simple, ResourceKey=DefaultItemStyle}" TargetType="{x:Type dxe:ListBoxEditItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=Owner.HorizontalContentAlignment, RelativeSource={RelativeSource Self}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding Path=Owner.VerticalContentAlignment, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Padding" Value="2,0,0,0" />
        <Setter Property="Template" Value="{DynamicResource {dxet:EditorListBoxThemeKey ResourceKey=ItemTemplate}}" />
    </Style>
</ResourceDictionary>