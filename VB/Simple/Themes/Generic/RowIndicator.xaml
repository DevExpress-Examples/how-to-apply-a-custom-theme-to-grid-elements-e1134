<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxgcore="http://schemas.devexpress.com/winfx/2008/xaml/grid" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars" xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid" xmlns:dxght="http://schemas.devexpress.com/winfx/2008/xaml/grid/internal" xmlns:dxgt="http://schemas.devexpress.com/winfx/2008/xaml/grid/themekeys" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">

    <dx:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />

    <ControlTemplate x:Key="{dxgt:RowIndicatorThemeKey ThemeName=Simple, ResourceKey=ItemsControlItemPanelTemplate}">
        <dx:StackVisibleIndexPanel Orientation="Vertical" ArrangeAccordingToVisibleIndex="True" />
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:RowIndicatorThemeKey ThemeName=Simple, ResourceKey=ItemTemplate}">
        <ContentPresenter x:Name="PART_Indicator" Content="{Binding DataContext, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{DynamicResource {dxgt:RowIndicatorThemeKey ThemeName=Simple, ResourceKey=RowTemplate}}" dxg:GridViewBase.RowHandle="{Binding Path=RowHandle}" dxg:GridPopupMenu.GridMenuType="RowCell" dxb:BarManager.DXContextMenu="{Binding Path=(dxg:GridControl.ActiveView).GridMenu, RelativeSource={RelativeSource TemplatedParent}}" />
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:RowIndicatorThemeKey ThemeName=Simple, ResourceKey=GroupPresenterTemplate}">
        <ContentPresenter x:Name="PART_Indicator" Content="{Binding DataContext, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{DynamicResource {dxgt:RowIndicatorThemeKey ThemeName=Simple, ResourceKey=GroupRowTemplate}}" dxg:GridViewBase.RowHandle="{Binding Path=RowHandle}" />
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:RowIndicatorThemeKey ThemeName=Simple, ResourceKey=AdditionalTemplate}">
        <ContentPresenter x:Name="PART_Indicator"
                          Content="{Binding}"
						  ContentTemplate="{DynamicResource {dxgt:RowIndicatorThemeKey ResourceKey=RowTemplate}}"/>
    </ControlTemplate>

    <DataTemplate x:Key="{dxgt:RowIndicatorThemeKey ThemeName=Simple, ResourceKey=IconPresenterTemplate}">
        <Border x:Name="errorIndicatorBorder" Background="Transparent">
            <ContentPresenter x:Name="iconPresenter" Content="{Binding DataContext, RelativeSource={RelativeSource TemplatedParent}}" />
        </Border>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=IndicatorState}" Value="None">
                <Setter Property="ContentTemplate" TargetName="iconPresenter">
                    <Setter.Value>
                        <DataTemplate>
                            <Grid />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IndicatorState}" Value="Focused">
                <Setter Property="ContentTemplate" Value="{DynamicResource {dxgt:RowIndicatorThemeKey ThemeName=Simple, ResourceKey=FocusedIconTemplate}}" TargetName="iconPresenter" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IndicatorState}" Value="Changed">
                <Setter Property="ContentTemplate" Value="{DynamicResource {dxgt:RowIndicatorThemeKey ThemeName=Simple, ResourceKey=ChangedIconTemplate}}" TargetName="iconPresenter" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IndicatorState}" Value="NewItemRow">
                <Setter Property="ContentTemplate" Value="{DynamicResource {dxgt:RowIndicatorThemeKey ThemeName=Simple, ResourceKey=NewItemRowIconTemplate}}" TargetName="iconPresenter" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IndicatorState}" Value="Editing">
                <Setter Property="ContentTemplate" Value="{DynamicResource {dxgt:RowIndicatorThemeKey ThemeName=Simple, ResourceKey=EditingIconTemplate}}" TargetName="iconPresenter" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IndicatorState}" Value="Error">
                <Setter Property="ContentTemplate" Value="{DynamicResource {dxgt:RowIndicatorThemeKey ThemeName=Simple, ResourceKey=ErrorIconTemplate}}" TargetName="iconPresenter" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IndicatorState}" Value="FocusedError">
                <Setter Property="ContentTemplate" Value="{DynamicResource {dxgt:RowIndicatorThemeKey ThemeName=Simple, ResourceKey=FocusedErrorIconTemplate}}" TargetName="iconPresenter" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IndicatorState}" Value="AutoFilterRow">
                <Setter Property="ContentTemplate" Value="{DynamicResource {dxgt:RowIndicatorThemeKey ThemeName=Simple, ResourceKey=AutoFilterRowIconTemplate}}" TargetName="iconPresenter" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxe:BaseEdit.HasValidationError)}" Value="True">
                <Setter Property="ToolTip" TargetName="errorIndicatorBorder">
                    <Setter.Value>
                        <DockPanel>
                            <dxe:ErrorControl Content="{Binding Path=(dxe:BaseEdit.ValidationError)}" />
                            <ContentPresenter VerticalAlignment="Center" Content="{Binding Path=(dxe:BaseEdit.ValidationError).ErrorContent}" />
                        </DockPanel>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
</ResourceDictionary>